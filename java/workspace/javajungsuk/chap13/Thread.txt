  -  프로세스 
     실행 중인 프로그램
     프로그램을 수행하는데 필요한 데이터와 메모리 등의 자원 그리고 쓰레드로 구성 
     하나의 쓰레드 존재
     하나 이상의 쓰레드를 가진 프로세스는 멀티쓰레드 프로세스 
   
  ** 쓰레드  : 어떠한 프로그램 내에서, 특히 프로세스 내에서 실행되는 흐름의 단위
  
  
  
  - 쓰레드의 구현 
   1) Thread클래스를 상속받는 방법
      class MyThread extends Thread{  
         public void run()  {   }
       }
   2) Runnable인터페이스 구현 (많이 사용) - 높은 재사용성, 코드 일관성
      class MyThread implements Runnable {  
         public void run()  {   }
       }
 
   
   
  - 쓰레드의 실행 - start()
    생성과 실행위한 호출 
    start()를 작성해도 시작하는 게 아니라 시작'대기'이며, os 스케줄러에 의해 실행된다
    코드 적은 순서부터 차례대로 실행되지 않는다.
    thread는 os에 의존적이다.
    한 번 종료된 스레드는 다시 실행될 수 없다. 
    
    
    
  - 쓰레드 start() VS run()
  run() 생성된 쓰레드를 실행시키는 것이 아닌 클래스에 선언된 메서드를 호출함 
  start() 새로운 쓰레드가 작업을 실행하는데 필요한 호출스택을 생성한 다음에 run()을 호출해서, 생성된 호출스택에 run()이 첫번째로 올라가게 한다. 
  
   
   - 쓰레드의 우선순위  :  1-10 숫자가 높을수록 높은 우선순위 
   
   - 쓰레드 그룹 
     쓰레드 그룹은 서로 관련된 쓰레드를 그룹으로 다루기 위한 것 
     모든 쓰레드는 반드시 하나의 쓰레드 그룹에 포함 
     쓰레드 그룹을 지정하지 않고 생성 쓰레드는 main group에 속함 
     자신이 생성한 스레드(부모스레드)의 그룹과 우선순위를 상속받음 
     
   - 스레드의 실행제어 
     효율적인 프로그램을 만들기 위해서 스케줄링과 동기화가 필요 
      sleep(millis) :  지정된 시간동안 스레드 일시정지, 지정 시간 지나면 자동적으로 다시 실행대기상태'
      join()        :  지정된 시간동안 스레드가 실행되도록 한다. 지정된 시간이 지나거나 작업이 종료되면 join()호출한 스레드로 다시 돌아와 실행 계속 
      interrupt()   :  sleep(), join() 에 의해 일시정지상태인 스레드를 깨워서 실행대기로 만듦 
      yield()       :  실행 중에 자신에게 주어진 실행시간을 다른 스레드에게 양복하고 자신은 실행대기상태가 된다. 
      
      - 동기화 
        한 쓰레드가 진행 중인 작업을 다른 쓰레드가 간섭하지 못하도록 막는 것을 쓰레드의 동기화라고 한다 
     
     
     
     
     
   