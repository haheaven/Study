<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >



<!--  namespace는 mapper의 전체 경로를 작성해 둔다.  -->
<mapper namespace="dao.QnA">
	
	<!-- 전체글 -->
	<select id="selectlist" resultType="dto.QnA" parameterType="Map">
		SELECT  b.idx, b.title, b.writer, b.category, b.readCount, b.content, b.register
		FROM ( SELECT ROWNUM AS RN, a.idx, a.title, a.writer, a.category, a.readCount, a.content, a.register 
				 FROM ( SELECT  idx, title, writer, category, readCount, content, register 
				 	 	  FROM QNA
				 	 	 ORDER BY IDX DESC)A)B
		WHERE  B.RN BETWEEN #{beginRecord} AND #{endRecord}	
	</select>
	
	
	<!--  게시글수 -->
	<select id="getCount" resultType="int">
		SELECT count(*)
		FROM qna
	</select>
	
	<!--  글등록 -->
	<insert id="insert" parameterType="dto.QnA">
		INSERT INTO qna
		VALUES(qna_seq.nextval, #{writer}, #{title}, #{content}, #{category}, 0, SYSDATE)
	</insert>
		
	<!--  상세보기  -->
	<select id="select" parameterType="long" resultType="dto.QnA">
		SELECT  idx, title, writer, category, readCount, content, register
		  FROM qna
		 WHERE idx=#{idx}
	</select>
	
	<!-- 조회수 증가 -->
	<update id="hit" parameterType="long">
		UPDATE qna SET readCount=readCount+1 
		 WHERE idx=#{idx}
	</update>
	
	<!-- 게시판 수정하기 -->
	<update id="updateQnA" parameterType="dto.QnA">
		UPDATE qna
		   SET title=#{title}, content=#{content}
		  WHERE idx=#{idx}
	</update>
	
	<!-- 게시판 삭제하기 -->
	<delete id="delete" parameterType="long">
		DELETE FROM qna WHERE idx=#{idx}
	</delete>
	
	<!-- 게시판 저장하기  -->
	<select id="AdminList"  resultType="dto.QnA"  >
		SELECT idx, writer, title, content, category,register
			FROM qna
			where writer NOT IN('관리자')
	</select>
	
	<!--  게시판 검색하기  -->
	<select id="searchQnA" parameterType="Map" resultType="dto.QnA">
	SELECT  b.idx, b.title, b.writer, b.category, b.readCount, b.content, b.register
      FROM ( SELECT  ROWNUM AS RN, a.idx, a.title, a.writer, a.category, a.readCount, a.content, a.register 
				 FROM ( SELECT  idx, title, writer, category, readCount, content, register 
				 	 	  FROM QNA
				 	     WHERE <if test=" column != 'ALL' ">${column} LIKE #{query}</if>
		 					   <if test=" column == 'ALL'">(TITLE LIKE #{query} OR CONTENT LIKE #{query} OR WRITER LIKE #{query})</if>
				 	 	 ORDER BY IDX DESC )A )B
   	   WHERE  B.RN BETWEEN #{beginRecord} AND #{endRecord}	
	</select>
	
	
	<!--  게시판 수 검색하기  -->
	<select id="searchQnACount" resultType="int" parameterType="Map">
		SELECT COUNT(*)
		  FROM qna
		 WHERE <if test=" column != 'ALL' ">${column} LIKE #{query}</if>
		 		<if test=" column == 'ALL'">(TITLE LIKE #{query} OR CONTENT LIKE #{query} OR WRITER LIKE #{query})</if>
	</select>
	

</mapper>